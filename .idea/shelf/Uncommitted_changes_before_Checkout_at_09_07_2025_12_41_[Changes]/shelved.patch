Index: frontend/ProductPage/Product.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>//Beispiel Daten händisch\r\nconst products = [\r\n    {id: 1, name: \"Whey Protein Vanilla\", price: 19.99, category: \"Supplements\", pic: \"https://cdn.shopify.com/s/files/1/0845/1358/7515/files/DesignerProteinPudding_360g_Black_WhiteVanillaFlavor_2024x2024_shop-iG0RlCqX_44ab9e01-a5e0-40b6-b077-ddd211bca90e.jpg?v=1749637177\"},\r\n    {id: 2, name: \"Creatine Monohydrate\", price: 14.49, category: \"Supplements\"},\r\n    {id: 3, name: \"Gym T-Shirt Black\", price: 24.99, category: \"Clothing\"},\r\n    {id: 4, name: \"Fitness Shorts\", price: 29.99, category: \"Clothing\"},\r\n    {id: 5, name: \"Protein Shaker 700ml\", price: 9.99, category: \"Style\"},\r\n    {id: 6, name: \"Lifting Gloves\", price: 15.99, category: \"Style\"},\r\n    {id: 7, name: \"Pre-Workout Booster\", price: 22.49, category: \"Supplements\"},\r\n    {id: 8, name: \"Sleeveless Hoodie\", price: 34.95, category: \"Clothing\"},\r\n    {id: 9, name: \"Resistance Bands Set\", price: 17.99, category: \"Style\"},\r\n    {id: 10, name: \"Zinc + Magnesium Capsules\", price: 11.90, category: \"Supplements\"}\r\n];\r\n\r\nconst productDetailModal = document.getElementById('product-detail-modal');\r\nconst modalImage = document.getElementById('modal-product-image');\r\nconst modalName = document.getElementById('modal-product-name');\r\nconst modalDescription = document.getElementById('modal-product-description');\r\nconst modalPrice = document.getElementById('modal-product-price');\r\nconst modalCategory = document.getElementById('modal-product-category');\r\nconst closeButton = productDetailModal.querySelector('.close-button');\r\nconst addToCartModalButton = productDetailModal ? productDetailModal.querySelector('.add-to-cart-modal') : null;\r\nlet currentProductInModal = null;\r\nconst filterForm = document.querySelector(\".filter form\");\r\n\r\nfunction renderProducts(productList = products) {\r\n    const container = document.querySelector('.product-card');\r\n    container.innerHTML = '';\r\n\r\n    productList.forEach(product => {\r\n        const card = document.createElement('div');\r\n        card.classList.add('product');\r\n        card.innerHTML = `\r\n            ${product.pic ? `<img src=\"${product.pic}\" alt=\"${product.pic}\">` : ''}\r\n            <h3>${product.name}</h3>\r\n            <p>${product.category}</p>\r\n            <p><strong>€${product.price}</strong></p>\r\n            <button class=\"add-to-cart-modal\">Add to card</button>\r\n            `;\r\n        container.appendChild(card);\r\n\r\n        card.addEventListener('click',(event) =>{\r\n            if(!event.target.classList.contains('add-to-cart-initial')){\r\n                openProductModal(product);\r\n            }\r\n        })\r\n\r\n        const AddToCartButton = card.querySelector('.add-to-cart-modal');\r\n        AddToCartButton.addEventListener('click', (event) => {\r\n            event.stopPropagation();\r\n            addToCart(product);\r\n        });\r\n    });\r\n}\r\n\r\nfilterForm.addEventListener(\"submit\", function (event) {\r\n    event.preventDefault();\r\n\r\n    const searchTerm = filterForm.elements[\"search\"].value.toLowerCase();\r\n    const selectedCategory = filterForm.elements[\"category\"].value;\r\n    const maxPrice = parseFloat(filterForm.elements[\"price\"].value);\r\n    const filteredProducts = products.filter(product => {\r\n        const matchesSearch = product.name.toLowerCase().includes(searchTerm);\r\n        const matchesCategory = selectedCategory === \"All\" || selectedCategory === \"\"|| product.category === selectedCategory;\r\n        const matchesPrice = isNaN(maxPrice) || product.price <= maxPrice;\r\n\r\n        return matchesSearch && matchesPrice && matchesCategory;\r\n    });\r\n    renderProducts(filteredProducts);\r\n});\r\n\r\nfunction addToCart(product){\r\n    const cart = JSON.parse(localStorage.getItem(\"cart\")) || [];\r\n    const existing = cart.findIndex(p => p.id === product.id);\r\n\r\n    if (existing !== -1){\r\n        cart[existing].quantity += 1;\r\n    } else {\r\n        cart.push({...product, quantity:1});\r\n    }\r\n\r\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\r\n    updateCartCount();\r\n}\r\n\r\nfunction openProductModal(product){\r\n    currentProductInModal = product;\r\n    modalImage.src = product.pic || ''; //Standardbild falls keins vorhanden\r\n    modalImage.alt = product.name;\r\n    modalName.textContent = product.name;\r\n    modalDescription.textContent = product.description || 'Keine detaillierte Beschreibung verfügbar.'; //Der Text wird erst sichtbar, wenn man das modal Fenster öffnet\r\n    modalCategory.textContent = `Kategorie: ${product.category}`;\r\n    modalPrice.textContent = `Preis: ${product.price}`\r\n\r\n    productDetailModal.classList.add('is-expanded');\r\n    document.body.style.overflow = 'hidden';//Verhindert das im hintergrund gescrolled werden kann.\r\n}\r\n\r\nfunction closeProductModal(){\r\n    productDetailModal.classList.remove('is-expanded');\r\n    document.body.style.overflow = '';//erlaubt scrollen wieder, wenn das Fenster geschlossen wird.\r\n}\r\n\r\ncloseButton.addEventListener('click', closeProductModal);\r\n\r\nproductDetailModal.addEventListener('click', (event) =>{\r\n    if (event.target === productDetailModal){\r\n        closeProductModal();\r\n    }\r\n})\r\n\r\nfunction updateCartCount(){\r\n    const cart = JSON.parse(localStorage.getItem(\"cart\")) || [];\r\n    const count = cart.reduce((sum, item) => sum + item.quantity, 0);\r\n    const cartCountElement = document.getElementById(\"cart-count\");\r\n    if(cartCountElement) {\r\n        cartCountElement.textContent = count;\r\n    }\r\n}\r\n\r\nif(addToCartModalButton){\r\n    addToCartModalButton.addEventListener(\"click\", (event) =>{\r\n        event.stopPropagation();\r\n        if (currentProductInModal){\r\n            addToCart(currentProductInModal);\r\n            closeProductModal();\r\n        }\r\n    });\r\n}\r\n\r\nwindow.addEventListener(\"DOMContentLoaded\", () =>{\r\n    renderProducts();\r\n    updateCartCount();\r\n})\r\n\r\n/*window.addEventListener('DOMContentLoaded', renderProducts)*/
===================================================================
diff --git a/frontend/ProductPage/Product.js b/frontend/ProductPage/Product.js
--- a/frontend/ProductPage/Product.js	(revision 9e36d9b9eed2ddb1d47546bcf7a31fb551a6bd08)
+++ b/frontend/ProductPage/Product.js	(date 1751993188213)
@@ -23,7 +23,7 @@
 let currentProductInModal = null;
 const filterForm = document.querySelector(".filter form");
 
-function renderProducts(productList = products) {
+async function renderProducts(productList = products) {
     const container = document.querySelector('.product-card');
     container.innerHTML = '';
 
